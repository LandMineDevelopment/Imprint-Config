#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#define BASE 0
#define NAV 1
#define NUM 2
#define SYM 3
#define CONTROL 4
#define MOUSE 5

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mt LCTRL BSPC>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ltt: layer_tap_toggle {
            compatible = "zmk,behavior-hold-tap";
            //label = "LAYER_TAP_TOGGLE";
            #binding-cells = <2>;
            bindings = <&mo>, <&tog>;
            tapping-term-ms = <200>;
        };

        rsl: retro_symbol_layer {
            compatible = "zmk,behavior-hold-tap";
            //label = "RETRO_SYM_LAYER";
            flavor = "balanced";
            //retro-tap;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
            tapping-term-ms = <200>;
        };
        
        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_num_layer {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&tog NUM>;
            layers = <BASE>;
        };
    };

    macros {
        exit_num: exit_num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RET>
                     , <&tog NUM>;
        };
    };
    

};



/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F1  &kp F2    &kp F3    &kp F4     &kp F5                  &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                  &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T                   &kp Y      &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp LCTRL  &kp A   &kp S     &kp D     &rsl SYM F &kp G                   &kp H      &rsl SYM J    &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B                   &kp N      &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&trans     &trans  &kp LGUI  &kp LALT  &trans                                       &trans    &kp LBKT   &kp RBKT  &trans    &trans
                   &mt LSHIFT RET   &mt LCTRL TAB  &kp ESC              &bspc_del  &bspc_del  &mt LSHIFT SPACE
                   &ltt NAV NAV     &mo MOUSE      &mo CONTROL          &kp CAPS   &mo 2      &ltt SYM SYM
            >;
        };

        Nav_Layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans    &trans     &trans  &trans    &trans    &trans     &trans     &trans
&trans  &trans    &trans    &trans     &trans    &trans     &trans  &trans    &trans    &trans     &trans     &trans
&trans  &trans    &kp LC(S) &kp LC(Z)  &kp LC(Y) &trans     &trans  &kp HOME  &kp UP    &kp END    &trans     &trans
&trans  &kp LC(A) &kp LC(X) &kp LC(C)  &kp LC(V) &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans
&trans  &trans    &trans    &trans     &trans    &trans     &trans  &kp PG_UP &trans    &kp PG_DN  &trans     &trans
&trans  &trans    &trans    &trans  &trans                          &trans    &trans    &trans     &trans     &trans
                                &trans  &trans  &trans       &trans  &trans    &trans
                                &trans  &trans  &trans       &trans  &trans    &trans
            >;
        };

        Numpad_Layer {
            bindings = <
&trans   &trans  &trans     &trans    &trans  &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans   &trans  &trans     &trans    &trans  &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans   &trans  &trans     &trans    &trans  &trans            &trans  &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans  &trans  
&trans   &trans  &kp UNDER  &kp COMMA &kp DOT &tog NUM          &trans  &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans  &trans
&trans   &trans  &trans     &trans    &trans  &trans            &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans  &trans
&trans   &trans  &trans     &trans  &trans                              &trans     &kp KP_N0  &trans     &trans  &trans
                             &exit_num  &trans  &trans    &trans  &trans    &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        Symbols_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans    &trans   &trans    &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans    &trans   &trans    &trans  &trans  &trans
&trans  &trans  &kp CARET  &kp LT     &kp GT     &trans            &trans    &kp EXCL &kp PLUS  &kp EQUAL  &trans  &trans
&trans  &trans  &kp MINUS  &kp LBKT  &kp RBKT    &kp SLASH         &kp STAR  &kp LPAR &kp RPAR  &kp UNDER  &trans  &trans
&trans  &trans  &kp AT     &kp MINUS &kp UNDER   &kp PIPE          &kp AMPS  &kp SQT  &kp DQT   &kp PRCNT  &trans  &trans
&trans  &trans  &trans     &trans     &trans                                 &trans   &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans        
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans  &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans  &trans           &trans
                                                       &trans        &trans        &trans    &trans  &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
//     activate layer MOUSE within 500ms of the trackball moving
     <&zip_temp_layer MOUSE 500>;
 };

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
